// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: evmos/inflation/v1/inflation.proto

package types

import (
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// InflationDistribution defines the distribution in which inflation is
// allocated through minting on each epoch (staking, incentives, community). It
// excludes the team vesting distribution, as this is minted once at genesis.
// The initial InflationDistribution can be calculated from the Evmos Token
// Model like this:
// mintDistribution1 = distribution1 / (1 - teamVestingDistribution)
// 0.5333333         = 40%           / (1 - 25%)
type InflationDistribution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// staking_rewards defines the proportion of the minted minted_denom that is
	// to be allocated as staking rewards
	StakingRewards string `protobuf:"bytes,1,opt,name=staking_rewards,json=stakingRewards,proto3" json:"staking_rewards,omitempty"`
	// usage_incentives defines the proportion of the minted minted_denom that is
	// to be allocated to the incentives module address
	UsageIncentives string `protobuf:"bytes,2,opt,name=usage_incentives,json=usageIncentives,proto3" json:"usage_incentives,omitempty"`
	// community_pool defines the proportion of the minted minted_denom that is to
	// be allocated to the community pool
	CommunityPool string `protobuf:"bytes,3,opt,name=community_pool,json=communityPool,proto3" json:"community_pool,omitempty"`
}

func (x *InflationDistribution) Reset() {
	*x = InflationDistribution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evmos_inflation_v1_inflation_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InflationDistribution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InflationDistribution) ProtoMessage() {}

func (x *InflationDistribution) ProtoReflect() protoreflect.Message {
	mi := &file_evmos_inflation_v1_inflation_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InflationDistribution.ProtoReflect.Descriptor instead.
func (*InflationDistribution) Descriptor() ([]byte, []int) {
	return file_evmos_inflation_v1_inflation_proto_rawDescGZIP(), []int{0}
}

func (x *InflationDistribution) GetStakingRewards() string {
	if x != nil {
		return x.StakingRewards
	}
	return ""
}

func (x *InflationDistribution) GetUsageIncentives() string {
	if x != nil {
		return x.UsageIncentives
	}
	return ""
}

func (x *InflationDistribution) GetCommunityPool() string {
	if x != nil {
		return x.CommunityPool
	}
	return ""
}

// ExponentialCalculation holds factors to calculate exponential inflation on
// each period. Calculation reference:
// periodProvision = exponentialDecay       *  bondingIncentive
// f(x)            = (a * (1 - r) ^ x + c)  *  (1 + max_variance - bondedRatio *
// (max_variance / bonding_target))
type ExponentialCalculation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// a defines the initial value
	A string `protobuf:"bytes,1,opt,name=a,proto3" json:"a,omitempty"`
	// r defines the reduction factor
	R string `protobuf:"bytes,2,opt,name=r,proto3" json:"r,omitempty"`
	// c defines the parameter for long term inflation
	C string `protobuf:"bytes,3,opt,name=c,proto3" json:"c,omitempty"`
	// bonding_target
	BondingTarget string `protobuf:"bytes,4,opt,name=bonding_target,json=bondingTarget,proto3" json:"bonding_target,omitempty"`
	// max_variance
	MaxVariance string `protobuf:"bytes,5,opt,name=max_variance,json=maxVariance,proto3" json:"max_variance,omitempty"`
}

func (x *ExponentialCalculation) Reset() {
	*x = ExponentialCalculation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evmos_inflation_v1_inflation_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExponentialCalculation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExponentialCalculation) ProtoMessage() {}

func (x *ExponentialCalculation) ProtoReflect() protoreflect.Message {
	mi := &file_evmos_inflation_v1_inflation_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExponentialCalculation.ProtoReflect.Descriptor instead.
func (*ExponentialCalculation) Descriptor() ([]byte, []int) {
	return file_evmos_inflation_v1_inflation_proto_rawDescGZIP(), []int{1}
}

func (x *ExponentialCalculation) GetA() string {
	if x != nil {
		return x.A
	}
	return ""
}

func (x *ExponentialCalculation) GetR() string {
	if x != nil {
		return x.R
	}
	return ""
}

func (x *ExponentialCalculation) GetC() string {
	if x != nil {
		return x.C
	}
	return ""
}

func (x *ExponentialCalculation) GetBondingTarget() string {
	if x != nil {
		return x.BondingTarget
	}
	return ""
}

func (x *ExponentialCalculation) GetMaxVariance() string {
	if x != nil {
		return x.MaxVariance
	}
	return ""
}

var File_evmos_inflation_v1_inflation_proto protoreflect.FileDescriptor

var file_evmos_inflation_v1_inflation_proto_rawDesc = []byte{
	0x0a, 0x22, 0x65, 0x76, 0x6d, 0x6f, 0x73, 0x2f, 0x69, 0x6e, 0x66, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x66, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x65, 0x76, 0x6d, 0x6f, 0x73, 0x2e, 0x69, 0x6e, 0x66, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x81,
	0x02, 0x0a, 0x15, 0x49, 0x6e, 0x66, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4c, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x6b,
	0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x23, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x1b, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x4c, 0x65, 0x67,
	0x61, 0x63, 0x79, 0x44, 0x65, 0x63, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x4e, 0x0a, 0x10, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x69, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x69, 0x76, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x23, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x1b, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x4c, 0x65, 0x67, 0x61,
	0x63, 0x79, 0x44, 0x65, 0x63, 0x52, 0x0f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x63, 0x65,
	0x6e, 0x74, 0x69, 0x76, 0x65, 0x73, 0x12, 0x4a, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x74, 0x79, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x23,
	0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x1b, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64,
	0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79,
	0x44, 0x65, 0x63, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x50, 0x6f,
	0x6f, 0x6c, 0x22, 0xc5, 0x02, 0x0a, 0x16, 0x45, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a,
	0x01, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x23, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde,
	0x1f, 0x1b, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d,
	0x61, 0x74, 0x68, 0x2e, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x44, 0x65, 0x63, 0x52, 0x01, 0x61,
	0x12, 0x31, 0x0a, 0x01, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x23, 0xc8, 0xde, 0x1f,
	0x00, 0xda, 0xde, 0x1f, 0x1b, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69,
	0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x44, 0x65, 0x63,
	0x52, 0x01, 0x72, 0x12, 0x31, 0x0a, 0x01, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x23,
	0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x1b, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64,
	0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79,
	0x44, 0x65, 0x63, 0x52, 0x01, 0x63, 0x12, 0x4a, 0x0a, 0x0e, 0x62, 0x6f, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x23,
	0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x1b, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64,
	0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79,
	0x44, 0x65, 0x63, 0x52, 0x0d, 0x62, 0x6f, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x12, 0x46, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x23, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde,
	0x1f, 0x1b, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d,
	0x61, 0x74, 0x68, 0x2e, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x44, 0x65, 0x63, 0x52, 0x0b, 0x6d,
	0x61, 0x78, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x33, 0x5a, 0x31, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x65, 0x74, 0x75, 0x2d, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x68, 0x65, 0x74, 0x75, 0x2f, 0x76, 0x31, 0x2f, 0x78, 0x2f,
	0x69, 0x6e, 0x66, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_evmos_inflation_v1_inflation_proto_rawDescOnce sync.Once
	file_evmos_inflation_v1_inflation_proto_rawDescData = file_evmos_inflation_v1_inflation_proto_rawDesc
)

func file_evmos_inflation_v1_inflation_proto_rawDescGZIP() []byte {
	file_evmos_inflation_v1_inflation_proto_rawDescOnce.Do(func() {
		file_evmos_inflation_v1_inflation_proto_rawDescData = protoimpl.X.CompressGZIP(file_evmos_inflation_v1_inflation_proto_rawDescData)
	})
	return file_evmos_inflation_v1_inflation_proto_rawDescData
}

var file_evmos_inflation_v1_inflation_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_evmos_inflation_v1_inflation_proto_goTypes = []interface{}{
	(*InflationDistribution)(nil),  // 0: evmos.inflation.v1.InflationDistribution
	(*ExponentialCalculation)(nil), // 1: evmos.inflation.v1.ExponentialCalculation
}
var file_evmos_inflation_v1_inflation_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_evmos_inflation_v1_inflation_proto_init() }
func file_evmos_inflation_v1_inflation_proto_init() {
	if File_evmos_inflation_v1_inflation_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_evmos_inflation_v1_inflation_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InflationDistribution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evmos_inflation_v1_inflation_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExponentialCalculation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_evmos_inflation_v1_inflation_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_evmos_inflation_v1_inflation_proto_goTypes,
		DependencyIndexes: file_evmos_inflation_v1_inflation_proto_depIdxs,
		MessageInfos:      file_evmos_inflation_v1_inflation_proto_msgTypes,
	}.Build()
	File_evmos_inflation_v1_inflation_proto = out.File
	file_evmos_inflation_v1_inflation_proto_rawDesc = nil
	file_evmos_inflation_v1_inflation_proto_goTypes = nil
	file_evmos_inflation_v1_inflation_proto_depIdxs = nil
}
