// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: evmos/erc20/v1/events.proto

package types

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// EventRegisterPair is an event emitted when a coin is registered.
type EventRegisterPair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// denom is the coin's denomination.
	Denom string `protobuf:"bytes,1,opt,name=denom,proto3" json:"denom,omitempty"`
	// erc20_address is the ERC20 contract address.
	Erc20Address string `protobuf:"bytes,2,opt,name=erc20_address,json=erc20Address,proto3" json:"erc20_address,omitempty"`
}

func (x *EventRegisterPair) Reset() {
	*x = EventRegisterPair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evmos_erc20_v1_events_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventRegisterPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventRegisterPair) ProtoMessage() {}

func (x *EventRegisterPair) ProtoReflect() protoreflect.Message {
	mi := &file_evmos_erc20_v1_events_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventRegisterPair.ProtoReflect.Descriptor instead.
func (*EventRegisterPair) Descriptor() ([]byte, []int) {
	return file_evmos_erc20_v1_events_proto_rawDescGZIP(), []int{0}
}

func (x *EventRegisterPair) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

func (x *EventRegisterPair) GetErc20Address() string {
	if x != nil {
		return x.Erc20Address
	}
	return ""
}

// EventToggleTokenConversion is an event emitted when a coin's token conversion is toggled.
type EventToggleTokenConversion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// denom is the coin's denomination.
	Denom string `protobuf:"bytes,1,opt,name=denom,proto3" json:"denom,omitempty"`
	// erc20_address is the ERC20 contract address.
	Erc20Address string `protobuf:"bytes,2,opt,name=erc20_address,json=erc20Address,proto3" json:"erc20_address,omitempty"`
}

func (x *EventToggleTokenConversion) Reset() {
	*x = EventToggleTokenConversion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evmos_erc20_v1_events_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventToggleTokenConversion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventToggleTokenConversion) ProtoMessage() {}

func (x *EventToggleTokenConversion) ProtoReflect() protoreflect.Message {
	mi := &file_evmos_erc20_v1_events_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventToggleTokenConversion.ProtoReflect.Descriptor instead.
func (*EventToggleTokenConversion) Descriptor() ([]byte, []int) {
	return file_evmos_erc20_v1_events_proto_rawDescGZIP(), []int{1}
}

func (x *EventToggleTokenConversion) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

func (x *EventToggleTokenConversion) GetErc20Address() string {
	if x != nil {
		return x.Erc20Address
	}
	return ""
}

// EventConvertCoin is an event emitted when a coin is converted.
type EventConvertCoin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// sender is the sender's address.
	Sender string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	// receiver is the receiver's address.
	Receiver string `protobuf:"bytes,2,opt,name=receiver,proto3" json:"receiver,omitempty"`
	// amount is the amount of coins to be converted.
	Amount string `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	// denom is the coin's denomination.
	Denom string `protobuf:"bytes,4,opt,name=denom,proto3" json:"denom,omitempty"`
	// erc20_address is the ERC20 contract address.
	Erc20Address string `protobuf:"bytes,5,opt,name=erc20_address,json=erc20Address,proto3" json:"erc20_address,omitempty"`
}

func (x *EventConvertCoin) Reset() {
	*x = EventConvertCoin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evmos_erc20_v1_events_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventConvertCoin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventConvertCoin) ProtoMessage() {}

func (x *EventConvertCoin) ProtoReflect() protoreflect.Message {
	mi := &file_evmos_erc20_v1_events_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventConvertCoin.ProtoReflect.Descriptor instead.
func (*EventConvertCoin) Descriptor() ([]byte, []int) {
	return file_evmos_erc20_v1_events_proto_rawDescGZIP(), []int{2}
}

func (x *EventConvertCoin) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *EventConvertCoin) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *EventConvertCoin) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *EventConvertCoin) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

func (x *EventConvertCoin) GetErc20Address() string {
	if x != nil {
		return x.Erc20Address
	}
	return ""
}

// EventConvertERC20 is an event emitted when an ERC20 is converted.
type EventConvertERC20 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// sender is the sender's address.
	Sender string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	// receiver is the receiver's address.
	Receiver string `protobuf:"bytes,2,opt,name=receiver,proto3" json:"receiver,omitempty"`
	// amount is the amount of coins to be converted.
	Amount string `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	// denom is the coin's denomination.
	Denom string `protobuf:"bytes,4,opt,name=denom,proto3" json:"denom,omitempty"`
	// contract_address of an ERC20 token contract, that is registered in a token pair
	ContractAddress string `protobuf:"bytes,5,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
}

func (x *EventConvertERC20) Reset() {
	*x = EventConvertERC20{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evmos_erc20_v1_events_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventConvertERC20) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventConvertERC20) ProtoMessage() {}

func (x *EventConvertERC20) ProtoReflect() protoreflect.Message {
	mi := &file_evmos_erc20_v1_events_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventConvertERC20.ProtoReflect.Descriptor instead.
func (*EventConvertERC20) Descriptor() ([]byte, []int) {
	return file_evmos_erc20_v1_events_proto_rawDescGZIP(), []int{3}
}

func (x *EventConvertERC20) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *EventConvertERC20) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *EventConvertERC20) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *EventConvertERC20) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

func (x *EventConvertERC20) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

var File_evmos_erc20_v1_events_proto protoreflect.FileDescriptor

var file_evmos_erc20_v1_events_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x65, 0x76, 0x6d, 0x6f, 0x73, 0x2f, 0x65, 0x72, 0x63, 0x32, 0x30, 0x2f, 0x76, 0x31,
	0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x65,
	0x76, 0x6d, 0x6f, 0x73, 0x2e, 0x65, 0x72, 0x63, 0x32, 0x30, 0x2e, 0x76, 0x31, 0x22, 0x4e, 0x0a,
	0x11, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x61,
	0x69, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x63, 0x32,
	0x30, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x65, 0x72, 0x63, 0x32, 0x30, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x57, 0x0a,
	0x1a, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x64,
	0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x6e, 0x6f,
	0x6d, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x63, 0x32, 0x30, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x63, 0x32, 0x30, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x99, 0x01, 0x0a, 0x10, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x23, 0x0a,
	0x0d, 0x65, 0x72, 0x63, 0x32, 0x30, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x63, 0x32, 0x30, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x22, 0xa0, 0x01, 0x0a, 0x11, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x74, 0x45, 0x52, 0x43, 0x32, 0x30, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x2f, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x65, 0x74, 0x75, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x2f, 0x68, 0x65, 0x74, 0x75, 0x2f, 0x76, 0x31, 0x2f, 0x78, 0x2f, 0x65, 0x72, 0x63, 0x32, 0x30,
	0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_evmos_erc20_v1_events_proto_rawDescOnce sync.Once
	file_evmos_erc20_v1_events_proto_rawDescData = file_evmos_erc20_v1_events_proto_rawDesc
)

func file_evmos_erc20_v1_events_proto_rawDescGZIP() []byte {
	file_evmos_erc20_v1_events_proto_rawDescOnce.Do(func() {
		file_evmos_erc20_v1_events_proto_rawDescData = protoimpl.X.CompressGZIP(file_evmos_erc20_v1_events_proto_rawDescData)
	})
	return file_evmos_erc20_v1_events_proto_rawDescData
}

var file_evmos_erc20_v1_events_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_evmos_erc20_v1_events_proto_goTypes = []interface{}{
	(*EventRegisterPair)(nil),          // 0: evmos.erc20.v1.EventRegisterPair
	(*EventToggleTokenConversion)(nil), // 1: evmos.erc20.v1.EventToggleTokenConversion
	(*EventConvertCoin)(nil),           // 2: evmos.erc20.v1.EventConvertCoin
	(*EventConvertERC20)(nil),          // 3: evmos.erc20.v1.EventConvertERC20
}
var file_evmos_erc20_v1_events_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_evmos_erc20_v1_events_proto_init() }
func file_evmos_erc20_v1_events_proto_init() {
	if File_evmos_erc20_v1_events_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_evmos_erc20_v1_events_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventRegisterPair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evmos_erc20_v1_events_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventToggleTokenConversion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evmos_erc20_v1_events_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventConvertCoin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evmos_erc20_v1_events_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventConvertERC20); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_evmos_erc20_v1_events_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_evmos_erc20_v1_events_proto_goTypes,
		DependencyIndexes: file_evmos_erc20_v1_events_proto_depIdxs,
		MessageInfos:      file_evmos_erc20_v1_events_proto_msgTypes,
	}.Build()
	File_evmos_erc20_v1_events_proto = out.File
	file_evmos_erc20_v1_events_proto_rawDesc = nil
	file_evmos_erc20_v1_events_proto_goTypes = nil
	file_evmos_erc20_v1_events_proto_depIdxs = nil
}
